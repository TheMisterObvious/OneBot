const https = require("https");

exports.run = async(client, message, args) => {

    const apiUrl = "api.mangadex.org";

    const dataRegister = JSON.stringify({
        "username": "OneBot",
        "password": "matis1801",
        "email": "mx232505@gmail.com"
    })

    const dataLogin = JSON.stringify({
        "username": "OneBot",
        "password": "matis1801"
    })

    const dataGet = JSON.stringify({
        "limit": 1,
        "title": "The Promised Neverland"
    })

    //

    const options2 = {
        hostname: apiUrl,
        path: "/auth/login",
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Content-Length': dataLogin.length
        }
    }

    const options = {
        hostname: apiUrl,
        path: "/account/create",
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Content-Length': dataRegister.length,
            'X-Captcha-Result': "6LflOrIaAAAAACcpRSiKQlt_X6bq-QcVjHTG1diJ"
        }
    }

    const options3 = {
        hostname: apiUrl,
        path: "/manga",
        method: 'GET',
        headers: {
            'Content-Type': 'application/json',
            'Content-Length': dataGet.length
        }
    }

    //

    if (args[0] === "register") {
        const req = https.request(options, res => {
            console.log(`statusCode: ${res.statusCode}`)

            res.on('data', d => {
                process.stdout.write(d)
            })
        })

        req.on('error', error => {
            console.error(JSON.parse(error))
        })

        req.write(dataRegister)
        req.end()
    }


    if (args[0] === "login") {
        const req2 = https.request(options2, res => {
            console.log(`statusCode: ${res.statusCode}`)

            res.on('data', d => {
                process.stdout.write(d)
            })
        })

        req2.on('error', error => {
            console.error(JSON.parse(error))
        })

        req2.write(dataLogin)
        req2.end()
    }

    if (args[0] === "get") {
        const req2 = https.request(options3, res => {
            console.log(`statusCode: ${res.statusCode}`)

            res.on('data', d => {
                process.stdout.write(d)
            })
        })

        req2.on('error', error => {
            console.error(JSON.parse(error))
        })

        req2.write(dataGet)
        req2.end()
    }


}

exports.config = {
    description: "WIP",
    template: "wip",
    permission: "BOT_ACCESS",
    aliases: ["scan"]
}